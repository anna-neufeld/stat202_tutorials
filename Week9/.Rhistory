procast_data <- MASS::mvrnorm(100, mu=c(6,6), Sigma=matrix(c(1.2,-0.9,-0.9,1.2), nrow=2))
#non_procast_data <- MASS::mvrnorm(1, mu=c(7,10), Sigma=matrix(c(1,0.1,0.1,1), #nrow=2))
data <- data.frame(rbind(cbind(procast_data,1))) #cbind(non_procast_data,0)))
names(data) <- c("sleep", "study", "proc")
data$score <- 58+3.5*data$study+0.5*data$sleep+rnorm(NROW(data), sd=2)
ggplot(data=data, aes(x=sleep, y=score))+geom_point()+theme_bw()+labs(col="Hours of studying last night")+xlab("Hours of sleep last night")+ylab("Exam score")+theme(legend.title=element_text(size=10))
View(lm.area)
set.seed(1)
procast_data <- MASS::mvrnorm(100, mu=c(6,6), Sigma=matrix(c(1.2,-0.9,-0.9,1.2), nrow=2))
#non_procast_data <- MASS::mvrnorm(1, mu=c(7,10), Sigma=matrix(c(1,0.1,0.1,1), #nrow=2))
data <- data.frame(rbind(cbind(procast_data,1))) #cbind(non_procast_data,0)))
names(data) <- c("sleep", "study", "proc")
data$score <- 58+3.5*data$study+0.5*data$sleep+rnorm(NROW(data), sd=2)
ggplot(data=data, aes(x=sleep, y=score, col=study))+geom_point()+theme_bw()+labs(col="Hours of studying last night")+xlab("Hours of sleep last night")+ylab("Exam score")+theme(legend.title=element_text(size=10))
set.seed(1)
procast_data <- MASS::mvrnorm(100, mu=c(6,6), Sigma=matrix(c(1.2,-0.9,-0.9,1.2), nrow=2))
#non_procast_data <- MASS::mvrnorm(1, mu=c(7,10), Sigma=matrix(c(1,0.1,0.1,1), #nrow=2))
data <- data.frame(rbind(cbind(procast_data,1))) #cbind(non_procast_data,0)))
names(data) <- c("sleep", "study", "proc")
data$score <- 58+3.5*data$study+0.5*data$sleep+rnorm(NROW(data), sd=2)
ggplot(data=data, aes(x=sleep, y=score, col=as.factor(study)))+geom_point()+theme_bw()+labs(col="Hours of studying last night")+xlab("Hours of sleep last night")+ylab("Exam score")+theme(legend.title=element_text(size=10))
set.seed(1)
procast_data <- MASS::mvrnorm(100, mu=c(6,6), Sigma=matrix(c(1.2,-0.9,-0.9,1.2), nrow=2))
#non_procast_data <- MASS::mvrnorm(1, mu=c(7,10), Sigma=matrix(c(1,0.1,0.1,1), #nrow=2))
data <- data.frame(rbind(cbind(procast_data,1))) #cbind(non_procast_data,0)))
names(data) <- c("sleep", "study", "proc")
data$score <- 58+3.5*data$study+0.5*data$sleep+rnorm(NROW(data), sd=2)
ggplot(data=data, aes(x=sleep, y=score, col=study)+geom_point()+theme_bw()+labs(col="Hours of studying last night")+xlab("Hours of sleep last night")+ylab("Exam score")+theme(legend.title=element_text(size=10))
set.seed(1)
procast_data <- MASS::mvrnorm(100, mu=c(6,6), Sigma=matrix(c(1.2,-0.9,-0.9,1.2), nrow=2))
#non_procast_data <- MASS::mvrnorm(1, mu=c(7,10), Sigma=matrix(c(1,0.1,0.1,1), #nrow=2))
data <- data.frame(rbind(cbind(procast_data,1))) #cbind(non_procast_data,0)))
names(data) <- c("sleep", "study", "proc")
data$score <- 58+3.5*data$study+0.5*data$sleep+rnorm(NROW(data), sd=2)
ggplot(data=data, aes(x=sleep, y=score, col=study))+geom_point()+theme_bw()+labs(col="Hours of studying last night")+xlab("Hours of sleep last night")+ylab("Exam score")+theme(legend.title=element_text(size=10))
set.seed(1)
procast_data <- MASS::mvrnorm(100, mu=c(6,6), Sigma=matrix(c(1.2,-0.9,-0.9,1.2), nrow=2))
#non_procast_data <- MASS::mvrnorm(1, mu=c(7,10), Sigma=matrix(c(1,0.1,0.1,1), #nrow=2))
data <- data.frame(rbind(cbind(procast_data,1))) #cbind(non_procast_data,0)))
names(data) <- c("sleep", "study", "proc")
data$score <- 58+3.5*data$study+0.5*data$sleep+rnorm(NROW(data), sd=2)
ggplot(data=data, aes(x=sleep, y=score, col=as.factor(round(study)))+geom_point()+theme_bw()+labs(col="Hours of studying last night")+xlab("Hours of sleep last night")+ylab("Exam score")+theme(legend.title=element_text(size=10))
mod.full <- lm(score~sleep+study, data=data)
summary(mod.full)$coefficients
mod.sleep <- lm(score~sleep, data=data)
summary(mod.sleep)$coefficients
happiness2021_clean <- read.csv("~/Downloads/happiness2021_clean.csv")
View(happiness2021_clean)
happiness <- read.csv("~/Downloads/happiness2021_clean.csv")
lm <- lm(Ladder.score~Logged.GDP.per.capita, data=happiness)
ggplot(data=happiness, aes(x=Logged.GDP.per.capita, y=Ladder.score))+
geom_point()
head(happiness)
ggplot(data=happiness, aes(x=Logged.GDP.per.capita, y=Ladder.score,
col=Regional.indicator))+
geom_point()
lm <- lm(Ladder.score~Logged.GDP.per.capita+regional.indicator, data=happiness)
lm <- lm(Ladder.score~Logged.GDP.per.capita+Regional.indicator, data=happiness)
lm1 <- lm(Ladder.score~Logged.GDP.per.capita, data=happiness)
lm1
summary(lm1)
summary(lm2)
lm2 <- lm(Ladder.score~Logged.GDP.per.capita+Regional.indicator, data=happiness)
summary(lm2)
ggplot(data=happiness, aes(x=Logged.GDP.per.capita, y=Ladder.score,
col=Regional.indicator))+
geom_point()+
geom_smooth(method="lm", se=F)
happiness <- read.csv("~/Downloads/happiness2021_clean.csv")
names(happiness)
happiness <- read.csv("~/Downloads/happiness2021_clean.csv")
names(happiness)[2] <- "region"
names(happiness)[3] <- "score"
happiness <- read.csv("~/Downloads/happiness2021_clean.csv")
names(happiness)[2] <- "Region"
names(happiness)[3] <- "Score"
ggplot(data=happiness, aes(x=Logged.GDP.per.capita, y=Score))+
ggtitle("Happiness, by GDP")+
geom_smooth(method="lm", se=F)
ggplot(data=happiness, aes(x=Logged.GDP.per.capita, y=Score))+
ggtitle("Happiness, by GDP")+geom_point()+
geom_smooth(method="lm", se=F)+theme_bw()
lm.gdp <- lm(Score~Logged.GDP.per.capita, data=happiness)
summary(lm.gdp)$coefficients
lm.gdp <- lm(Score~Logged.GDP.per.capita, data=happiness)
summary(lm.gdp)$coefficients
x1 <- rnorm(50)
x2 <- rnorm(50)
x3 <- rnorm(50)
x4 <- rnorm(50)
y1 <- rnorm(50)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
geom_title(paste("R2 =" , cor(x1,y1)^2))
set.seed(1)
x1 <- rnorm(50)
x2 <- rnorm(50)
x3 <- rnorm(50)
x4 <- rnorm(50)
y1 <- rnorm(50)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R2 =" , cor(x1,y1)^2))
p1
set.seed(1)
x1 <- rnorm(50)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(50, sd=5)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p2 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p3 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p4 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
set.seed(1)
x1 <- rnorm(50)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(50, sd=5)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p2 <- ggplot(data=NULL, aes(x=x2, y=y2))+geom_point()+ggtitle(paste("R^2 =" , cor(x2,y2)^2))
p3 <- ggplot(data=NULL, aes(x=x3, y=y3))+geom_point()+
ggtitle(paste("R^2 =" , cor(x3,y3)^2))
p4 <- ggplot(data=NULL, aes(x=x4, y=y4))+geom_point()+
ggtitle(paste("R^2 =" , cor(x4,y4)^2))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
set.seed(1)
x1 <- rnorm(25)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(25, sd=5)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p2 <- ggplot(data=NULL, aes(x=x2, y=y2))+geom_point()+ggtitle(paste("R^2 =" , cor(x2,y2)^2))
p3 <- ggplot(data=NULL, aes(x=x3, y=y3))+geom_point()+
ggtitle(paste("R^2 =" , cor(x3,y3)^2))
p4 <- ggplot(data=NULL, aes(x=x4, y=y4))+geom_point()+
ggtitle(paste("R^2 =" , cor(x4,y4)^2))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
set.seed(1)
x1 <- rnorm(25, sd=2)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(25)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p2 <- ggplot(data=NULL, aes(x=x2, y=y2))+geom_point()+ggtitle(paste("R^2 =" , cor(x2,y2)^2))
p3 <- ggplot(data=NULL, aes(x=x3, y=y3))+geom_point()+
ggtitle(paste("R^2 =" , cor(x3,y3)^2))
p4 <- ggplot(data=NULL, aes(x=x4, y=y4))+geom_point()+
ggtitle(paste("R^2 =" , cor(x4,y4)^2))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
set.seed(1)
x1 <- rnorm(25, sd=2)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(25)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , cor(x1,y1)^2))
p2 <- ggplot(data=NULL, aes(x=x2, y=y2))+geom_point()+ggtitle(paste("R^2 =" , cor(x2,y2)^2))
p3 <- ggplot(data=NULL, aes(x=x3, y=y3))+geom_point()+
ggtitle(paste("R^2 =" , cor(x3,y3)^2))
p4 <- ggplot(data=NULL, aes(x=x4, y=y4))+geom_point()+
ggtitle(paste("R^2 =" , cor(x4,y4)^2))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
set.seed(1)
x1 <- rnorm(25, sd=2)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(25)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , round(cor(x1,y1)^2,4)))
p2 <- ggplot(data=NULL, aes(x=x2, y=y2))+geom_point()+ggtitle(paste("R^2 =" , round(cor(x2,y2)^2,4)))
p3 <- ggplot(data=NULL, aes(x=x3, y=y3))+geom_point()+
ggtitle(paste("R^2 =" , round(cor(x3,y3)^2,4)))
p4 <- ggplot(data=NULL, aes(x=x4, y=y4))+geom_point()+
ggtitle(paste("R^2 =" , round(cor(x4,y4)^2,4)))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
set.seed(2)
x1 <- rnorm(25, sd=2)
x2 <- rnorm(50)
x3 <- rnorm(50, sd=5)
x4 <- rnorm(50)
y1 <- rnorm(25)
y2 <- rnorm(50)
y3 <- rnorm(50)
y4 <- rnorm(50)
p1 <- ggplot(data=NULL, aes(x=x1, y=y1))+geom_point()+
ggtitle(paste("R^2 =" , round(cor(x1,y1)^2,4)))
p2 <- ggplot(data=NULL, aes(x=x2, y=y2))+geom_point()+ggtitle(paste("R^2 =" , round(cor(x2,y2)^2,4)))
p3 <- ggplot(data=NULL, aes(x=x3, y=y3))+geom_point()+
ggtitle(paste("R^2 =" , round(cor(x3,y3)^2,4)))
p4 <- ggplot(data=NULL, aes(x=x4, y=y4))+geom_point()+
ggtitle(paste("R^2 =" , round(cor(x4,y4)^2,4)))
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
p1+p2+p3+p4 & xlab("X") & ylab("Y") & theme_bw()
anova(lm.gdp)
summary(lm.gdp)$coefficients
summary(lm.gdp)$coefficients
15.60983^2
summary(lm.gdp)$coefficients
15.60983^2
anova(lm.gdp)
NROW(happiness)
64.227/147
anova(lm.gdp)
106.463/(106.463+64.227)
summary(lm.gdp)$r.squared
64.227/(nrow(happiness)-2)
106.463  / 0.437
1 - pf(243.6224, 2, nrow(happiness)-2)
table(happiness$Region)
table(happiness$Region)
summary(lm.gdp)$coefficients[2,]
15.60983^2
anova(lm.gdp)
names(anova(lm.gdp))
summary(lm.gdp)$coefficients[2,]
15.60983^2
anova(lm.gdp)[1,]
ssummary(lm.gdp)$coefficients
summary(lm.gdp)$coefficients
summary(lm.gdp)$coefficients[2,]
106.463/(106.463+64.227)
summary(lm.gdp)$r.squared
anova(lm.gdp)
anova(lm.gdp)
summary(lm.gdp)$coefficients
summary(lm.gdp)$coefficients[2,]
lm.gdp <- lm(Score~Logged.GDP.per.capita, data=happiness)
summary(lm.gdp)$coefficients
round(summary(lm.gdp)$coefficients[2,],5)
ggplot(data=happiness, aes(x=Score, y=Logged.GDP.per.capita, col=Region))+geom_point()+geom_smooth()+theme_bw()
ggplot(data=happiness, aes(y=Score, x=Logged.GDP.per.capita, col=Region))+geom_point()+geom_smooth(method="lm")+theme_bw()
ggplot(data=happiness, aes(y=Score, x=Logged.GDP.per.capita, col=Region))+geom_point()+geom_smooth(method="lm", se=F)+theme_bw()
mod.full
knitr::opts_chunk$set(eval = FALSE)
library(tidyverse)
library(openintro)
library(tidyverse)
dat.small <- read.csv("https://anna-neufeld.github.io/stat202_tutorials/Week9/dat.small.csv")
dat.big <- read.csv("https://anna-neufeld.github.io/stat202_tutorials/Week9/dat.big.csv")
dat.big.test <- read.csv("https://anna-neufeld.github.io/stat202_tutorials/Week9/dat.big.test.csv")
pairs(dat.small)
library(tidyverse)
library(knitr)
library(kableExtra)
cor(dat.small) %>%kable()%>%
kable_styling(font_size = 10)
mod1 <- lm(y~x1, data=dat.small)
mod12 <- lm(y~x1+x2, data=dat.small)
summary(mod1)$coefficients[2,]
summary(mod12)$coefficients[2,]
summary(mod1)$r.squared
summary(mod12)$r.squared
cor(dat.small$x1, dat.small$x2)
ggplot(data=NULL, aes(x=mod1$fitted, y=mod12$fitted))+geom_point()+
geom_abline(slope=1, intercept=0)
cor(dat.small$x1, dat.small$x3)
mod13 <- lm(y~x1+x3, data=dat.small)
summary(mod13)$coefficients[2,]
summary(mod1)$coefficients[2,]
summary(mod13)$r.squared
summary(mod1)$r.squared
summary(lm(y~x1+x4, data=dat.small))
mod167 <- lm(y~x1+x6+x7, data=dat.small)
summary(mod167)
mod.full <- lm(y~., data=dat.big)
ks <- 1:30
R2s <- c(summary(lm(y~1, data=dat.big))$r.squared,
sapply(ks[2:30], function(u) summary(lm(y~., data=dat.big[,1:u]))$r.squared))
ggplot(data=NULL, aes(x=ks-1, y=R2s))+geom_point()+geom_line()+theme_bw()
library(patchwork)
preds.test <- predict(mod.full, newdata=dat.test)
preds.test <- predict(mod.full, newdata=test.big)
preds.test <- predict(mod.full, newdata=dat.big.test)
preds.test <- predict(mod.full, newdata=dat.big.test)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test)^2)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test)^2)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
mod.small <- lm(y~x1, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
plot(dat.big.test$y, preds.test)
mod.full
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
plot(dat.big.test$y, preds.test)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.medium <- lm(y~x1+x5+x6+x7+x10, data=dat.big)
preds.test.medium <- predict(mod.medium, newdata=dat.big.test)
sum((preds.test.medium - dat.big.medium$y)^2)
mod.medium <- lm(y~x1+x5+x6+x7+x10, data=dat.big)
preds.test.medium <- predict(mod.medium, newdata=dat.big.test)
sum((preds.test.medium - dat.big.test$y)^2)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.medium <- lm(y~x1+x5+x6+x7+x10, data=dat.big)
preds.test.medium <- predict(mod.medium, newdata=dat.big.test)
sum((preds.test.medium - dat.big.test$y)^2)
SSE.train <- rep(0, 30)
SSE.test <- rep(0,30)
mod.train <- lm(y~1, data=dat.big)
SSE.train[1] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[1] <- sum((preds.test -dat.big$y)^2)
for (k in 2:30) {
mod.train <- lm(y~., data=dat.big[,1:k])
SSE.train[k] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[k] <- sum((preds.test -dat.big$y)^2)
}
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=SSE.train, col="Train SSE")+
geom_line(aes(x=1:30, y=SSE.train, col="Test SSE")
SSE.train <- rep(0, 30)
SSE.test <- rep(0,30)
mod.train <- lm(y~1, data=dat.big)
SSE.train[1] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[1] <- sum((preds.test -dat.big$y)^2)
for (k in 2:30) {
mod.train <- lm(y~., data=dat.big[,1:k])
SSE.train[k] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[k] <- sum((preds.test -dat.big$y)^2)
}
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=SSE.train, col="Train SSE"))+
geom_line(aes(x=1:30, y=SSE.train, col="Test SSE"))
SSE.train <- rep(0, 30)
SSE.test <- rep(0,30)
mod.train <- lm(y~1, data=dat.big)
SSE.train[1] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[1] <- sum((preds.test -dat.big$y)^2)
for (k in 2:30) {
mod.train <- lm(y~., data=dat.big[,1:k])
SSE.train[k] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[k] <- sum((preds.test -dat.big$y)^2)
}
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=SSE.train, col="Train SSE"))+
geom_line(aes(x=1:30, y=SSE.test, col="Test SSE")) +
theme_bw()+ylab("Sum of Squared Errors")+labs(col="Dataset")+
xlab("Number of Variables in Model")
mod.small <- lm(y~x1, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.small <- lm(y~1, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
head(dat.big)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.train <- rep(0, 30)
SSE.test <- rep(0,30)
mod.train <- lm(y~1, data=dat.big)
SSE.train[1] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[1] <- sum((preds.test -dat.big$y)^2)
for (k in 2:30) {
mod.train <- lm(y~., data=dat.big[,1:k])
SSE.train[k] <- sum((mod.train$fitted-dat.big$y)^2)
preds.test <- predict(mod.train, newdata=dat.big.test)
SSE.test[k] <- sum((preds.test -dat.big.test$y)^2)
}
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=SSE.train, col="Train SSE"))+
geom_line(aes(x=1:30, y=SSE.test, col="Test SSE")) +
theme_bw()+ylab("Sum of Squared Errors")+labs(col="Dataset")+
xlab("Number of Variables in Model")
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=SSE.train, col="Train SSE"))+
geom_line(aes(x=1:30, y=SSE.test, col="Test SSE")) +
theme_bw()+ylab("Sum of Squared Errors")+labs(col="Dataset")+
xlab("Number of Variables in Model")
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
mod.small <- lm(y~1, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.small <- lm(y~1, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
preds.test <- predict(mod.full, newdata=dat.big.test)
sum((preds.test - dat.big.test$y)^2)
mod.small <- lm(y~1, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.small <- lm(y~x1+x5, data=dat.big)
preds.test.small <- predict(mod.small, newdata=dat.big.test)
sum((preds.test.small - dat.big.test$y)^2)
mod.intercept <- lm(y~1, data=dat.big)
preds.intercept <- predict(mod.intercept, newdata=dat.big.test)
sum((preds.intercept- dat.big.test$y)^2)
R2.train <- 1-SSE.train/(sum(dat.big$y-mean(dat.big$y))^2)
R2.train
R2.train <- 1-SSE.train/(sum((dat.big$y-mean(dat.big$y)^2)))
R2.train
R2.train <- 1-SSE.train/(sum((dat.big$y-mean(dat.big$y))^2))
R2.train
R2.test <- 1-SSE.test/(sum((dat.big.test$y-mean(dat.big.test$y))^2))
R2.test
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=SSE.train, col="Train SSE"))+
geom_line(aes(x=1:30, y=SSE.test, col="Test SSE")) +
theme_bw()+ylab("Sum of Squared Errors")+labs(col="Dataset")+
xlab("Number of Variables in Model")
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=R2.train, col="Train SSE"))+
geom_line(aes(x=1:30, y=R2.test, col="Test SSE")) +
theme_bw()+ylab("Sum of Squared Errors")+labs(col="Dataset")+
xlab("Number of Variables in Model")
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=R2.train, col="R2 on training set"))+
geom_line(aes(x=1:30, y=R2.test, col="R2 on test set")) +
theme_bw()+ylab("R2")+labs(col="Dataset")+
xlab("Number of Variables in Model")
ggplot(data=NULL) +
geom_line(aes(x=1:30, y=R2.train, col="R2 on training set"))+
geom_line(aes(x=1:30, y=R2.test, col="R2 on test set")) +
theme_bw()+ylab("R2")+labs(col="Dataset")+
xlab("Number of Variables in Model")
mod.reg <- lm(Score~Region, data=happiness)
summary(mod.reg)$coefficients
mod.reg <- lm(Score~Region, data=happiness)
round(summary(mod.reg)$coefficients,4)
happiness
mod.1 <- lm(Score~Logged.GDP.per.capita, data=happiness)
mod.1 <- lm(Score~Logged.GDP.per.capita, data=happiness)
mod.1 <- lm(Score~Logged.GDP.per.capita, data=happiness)
mod.2 <- lm(Score~Logged.GDP.per.capita+Region, data=happiness)
mod.1 <- lm(Score~Logged.GDP.per.capita, data=happiness)
mod.2 <- lm(Score~Logged.GDP.per.capita+Region, data=happiness)
anova(mod.1, mod.2)
ggplot(data=happiness, aes(y=Score, x=Logged.GDP.per.capita, col=Region))+geom_point()
?anova
mod.small <- lm(Score~Logged.GDP.per.capita, data=happiness)
mod.big <- lm(Score~Logged.GDP.per.capita+Region, data=happiness)
anova(mod.big, mod.small)
anova(mod.small, mod.big)
anova(mod.reg)
106.053/9
64.639/(nrow(happiness)-9)
106.053/9
64.639/(nrow(happiness)-9)
aov(Score~Region, data=happiness)
anova(aov(Score~Region, data=happiness))
